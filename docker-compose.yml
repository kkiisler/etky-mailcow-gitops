version: '3.8'

services:
  db:
    image: mariadb:10.11
    container_name: nextcloud-db
    restart: always
    environment:
      TZ: Europe/Tallinn
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - nextcloud_internal
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    image: redis:7-alpine
    container_name: nextcloud-redis
    restart: always
    environment:
      TZ: Europe/Tallinn
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory ${REDIS_MAX_MEMORY:-512mb} --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - nextcloud_internal
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "redis-cli", "--pass", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  app:
    image: nextcloud:${NEXTCLOUD_VERSION:-31}
    container_name: nextcloud-app
    restart: always
    entrypoint: /fix-permissions.sh
    command: apache2-foreground
    environment:
      # Timezone
      TZ: Europe/Tallinn
      # Database
      MYSQL_HOST: db
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      
      # Admin
      NEXTCLOUD_ADMIN_USER: ${NEXTCLOUD_ADMIN_USER}
      NEXTCLOUD_ADMIN_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD}
      NEXTCLOUD_TRUSTED_DOMAINS: ${DOMAIN_NAME}
      
      # Auto-install on first run
      NEXTCLOUD_UPDATE: 1
      
      # S3 Storage
      OBJECTSTORE_S3_HOST: ${S3_ENDPOINT}
      OBJECTSTORE_S3_BUCKET: ${S3_BUCKET}
      OBJECTSTORE_S3_KEY: ${S3_ACCESS_KEY}
      OBJECTSTORE_S3_SECRET: ${S3_SECRET_KEY}
      OBJECTSTORE_S3_PORT: "443"
      OBJECTSTORE_S3_SSL: "true"
      OBJECTSTORE_S3_REGION: ${S3_REGION:-us-east-1}
      OBJECTSTORE_S3_AUTOCREATE: "false"
      OBJECTSTORE_S3_USEPATH_STYLE: "true"
      
      # AWS SDK
      AWS_ACCESS_KEY_ID: ${S3_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${S3_SECRET_KEY}
      
      # Protocol
      OVERWRITEPROTOCOL: https
      OVERWRITEHOST: ${DOMAIN_NAME}
      
      # Redis
      REDIS_HOST: redis
      REDIS_HOST_PASSWORD: ${REDIS_PASSWORD}
      
      # Mail Configuration (Mailcow Integration)
      SMTP_HOST: ${SMTP_HOST:-mailcow-postfix}
      SMTP_SECURE: ${SMTP_SECURE:-tls}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_NAME: ${SMTP_NAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS:-noreply}
      MAIL_DOMAIN: ${MAIL_DOMAIN}
    volumes:
      - nextcloud_data:/var/www/html
      - ./scripts/fix-permissions.sh:/fix-permissions.sh:ro
    networks:
      - nextcloud_internal
      - ${TRAEFIK_NETWORK:-traefik_proxy}
    depends_on:
      - db
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/status.php"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    labels:
      # Traefik configuration
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.tls.certresolver=letsencrypt"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
      - "traefik.docker.network=${TRAEFIK_NETWORK:-traefik_proxy}"
      
      # Security headers
      - "traefik.http.middlewares.nextcloud-headers.headers.stsSeconds=15552000"
      - "traefik.http.middlewares.nextcloud-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.nextcloud-headers.headers.stsPreload=true"
      - "traefik.http.middlewares.nextcloud-headers.headers.customFrameOptionsValue=SAMEORIGIN"
      - "traefik.http.middlewares.nextcloud-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.nextcloud-headers.headers.browserXssFilter=true"
      - "traefik.http.middlewares.nextcloud-headers.headers.referrerPolicy=no-referrer"
      - "traefik.http.middlewares.nextcloud-headers.headers.customRequestHeaders.X-Forwarded-Proto=https"
      
      # CalDAV/CardDAV redirects
      - "traefik.http.middlewares.nextcloud-dav.redirectregex.permanent=true"
      - "traefik.http.middlewares.nextcloud-dav.redirectregex.regex=https://(.*)/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.nextcloud-dav.redirectregex.replacement=https://$${1}/remote.php/dav/"
      
      # Apply middlewares
      - "traefik.http.routers.nextcloud.middlewares=nextcloud-dav,nextcloud-headers@docker"

volumes:
  db_data:
  nextcloud_data:
  redis_data:

networks:
  nextcloud_internal:
    internal: true
  traefik_proxy:
    external: true